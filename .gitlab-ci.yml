variables:
   AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
   AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
   S3_BUCKET_NAME: $S3_BUCKET_NAME

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build:
  only:
    - front-end
  image: node:18
  stage: build
  before_script:
    - cd ./vakitaProyectFrontEnd
  script: 
    - npm i
    - pwd && ls -la
    - npm run build
  artifacts:
   paths:
     - /builds/ctd/hispanos/proyecto-integrador-2/proyecto-integrador-0723/1021ft-c1/equipo-03/vakitaProyectFrontEnd/dist/*

deploy: 
  only:
    - front-end
  image: alpine:3.16
  stage: deploy
  before_script:
    - apk update && apk add openssh-client bash 
    - mkdir -p ~/.ssh 
    - eval $(ssh-agent -s) 
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null 
    - touch ~/.ssh/config 
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config 
    - pwd
    - ssh-keyscan -H $CLOUD_NGINX_IP >> ~/.ssh/known_hosts 
  script:
    - scp -r /builds/ctd/hispanos/proyecto-integrador-2/proyecto-integrador-0723/1021ft-c1/equipo-03/vakitaProyectFrontEnd/dist ubuntu@$CLOUD_NGINX_IP:/home/ubuntu/
    - ssh ubuntu@$CLOUD_NGINX_IP "sudo cp -r dist/assets /var/www/54.221.139.107" 
    - ssh ubuntu@$CLOUD_NGINX_IP "sudo cp -r dist/images /var/www/54.221.139.107" 
    - ssh ubuntu@$CLOUD_NGINX_IP "sudo cp -r dist/index.html /var/www/54.221.139.107"
    - ssh ubuntu@$CLOUD_NGINX_IP "sudo nginx -s reload"
 